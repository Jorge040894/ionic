{"version":3,"sources":["webpack:///./src/app/tab1/tab1.module.ts","webpack:///./src/app/tab1/tab1.page.html","webpack:///./src/app/tab1/tab1.page.scss","webpack:///./src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","file":"tab1-tab1-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { HttpClientModule } from '@angular/common/http';\nimport { apiservice } from '../services/api.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }]),\n    HttpClientModule\n  ],\n  declarations: [Tab1Page],\n  providers:[apiservice]\n})\nexport class Tab1PageModule {\n \n\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Tab One\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<!--\\n    <ion-card class=\\\"welcome-card\\\">\\n      <ion-img src=\\\"/assets/shapes.svg\\\"></ion-img>\\n      <ion-card-header>\\n        <ion-card-subtitle>Get Started</ion-card-subtitle>\\n        <ion-card-title>Welcome to Ionic</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>Now that your app has been created, you'll want to start building out features and components. Check out some of the resources below for next steps.</p>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-list lines=\\\"none\\\">\\n      <ion-list-header>\\n        <ion-label>Resources</ion-label>\\n      </ion-list-header>\\n      <ion-item href=\\\"https://ionicframework.com/docs/\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"book\\\"></ion-icon>\\n        <ion-label>Ionic Documentation</ion-label>\\n      </ion-item>\\n      <ion-item href=\\\"https://ionicframework.com/docs/building/scaffolding\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"build\\\"></ion-icon>\\n        <ion-label>Scaffold Out Your App</ion-label>\\n      </ion-item>\\n      <ion-item href=\\\"https://ionicframework.com/docs/layout/structure\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"grid\\\"></ion-icon>\\n        <ion-label>Change Your App Layout</ion-label>\\n      </ion-item>\\n      <ion-item href=\\\"https://ionicframework.com/docs/theming/basics\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"color-fill\\\"></ion-icon>\\n        <ion-label>Theme Your App</ion-label>\\n      </ion-item>\\n    </ion-list>\\n-->\\n\\n<h1>Proyecto Progra 3</h1>\\n\\n<!--\\n<div>\\n  <form id=\\\"f01\\\" [formGroup]=\\\"formGroup\\\">\\n\\n    <label>nombre:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"nombre\\\"/>\\n\\n    <label>apellido:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"apellido\\\"/>\\n\\n    <label>edad:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"edad\\\"/>\\n\\n    <button (click)=\\\"enviarFormulario()\\\">\\n      guardar\\n    </button>\\n\\n    <button (click)=\\\"actualizarFormulario()\\\">\\n      actualizar\\n    </button>\\n\\n  </form>\\n</div>\\n-->\\n\\n<div>\\n  <form (ngSubmit)=\\\"sendForm()\\\">\\n    <ion-item>\\n      <ion-label>Name</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"person.primerNombre\\\" name=\\\"primerNombre\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Surname</ion-label>\\n      <ion-textarea [(ngModel)]=\\\"person.segundoNombre\\\" name=\\\"segundoNombre\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Age</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"person.edad\\\" name=\\\"edad\\\"></ion-input>\\n    </ion-item>\\n    <br>\\n    <ion-button type=\\\"submit\\\" color=\\\"primary\\\">{{ action }}</ion-button>\\n  </form> \\n</div>\\n\\n</ion-content>\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qcG9vdS9qb3JnZWdleS9pb25pYy9zcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndlbGNvbWUtY2FyZCBpb24taW1nIHtcbiAgbWF4LWhlaWdodDogMzV2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiJdfQ== */\"","/*import { Component } from '@angular/core';*/\n\nimport {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {apiservice} from '../services/api.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {campos} from '../classes/campos';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page /*implements OnInit, OnDestroy, AfterViewInit*/ {\n  //creamos una variable en la cual indicamos que resive datos de cualquir tipo\n  //indicamos los parametros que contendra lo cuales utlizaremos en el spring\n  //y las declaramos de forma global para sehir usandolas \n  person: any = {\n    primerNombre: '',\n    segundoNombre: '',\n    edad: ''\n  };\n  \n  personas: any[]; // una propiedad que recibe datos de cualquier tipo \n\n  action: string = 'agregar'; // se crea una propiedad que se utilizara para un boton\n\n  constructor(private personaService: apiservice) {\n    this.getRefresh();\n  }\n// el sendForm nos sirve para enviar los datos via post este lo llamamos \n//desde el html y se le instancia a un boton para su ejecucion y tambien la usamos para el Put\n\n  sendForm(){\n    //No permite que las casillas nombre y apellido envien datos vacios \n    if(this.person.primerNombre != '' && this.person.segundoNombre != '') {\n      if (this.action == 'agregar'){\n        this.personaService.create(this.person).subscribe(response => {\n          this.getRefresh();\n          this.person = {\n            primerNombre: '',\n            segundoNombre: '',\n            edad: ''\n          }; \n        });\n      }\n      if (this.action == 'actualizar'){\n        console.log('Update');\n        console.log(this.person);\n        this.personaService.update(this.person).subscribe(response => {\n          this.getRefresh();\n          this.person = {\n            primerNombre: '',\n            segundoNombre: '',\n            edad: ''\n          };\n          this.action = 'agregar' \n        });\n      }\n\n    }\n  }\n\n\n\n  getRefresh(){\n    this.personaService.personaList([]).subscribe(response=>{\n      this.personas = response;\n    });\n  }\n\n  showItem(item: any, index: number) {\n    this.action = 'actualizar';\n    this.person.id = index;\n    this.person.primerNombre = item.primerNombre;\n    this.person.segundoNombre = item.segundoNombre;\n    this.person.edad = item.edad;\n  }\n\n}"],"sourceRoot":""}